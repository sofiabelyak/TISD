#ifndef INPUT_MATRIX_H__
#define INPUT_MATRIX_H__

#include <stdio.h>
#include <stdlib.h>
#include "error.h"

/**
 * Читает матрицу из стандартного ввода и сохраняет ее в разреженной форме в трех массивах.
 *
 * @param n     Указатель на количество строк матрицы (возвращаемое значение).
 * @param m     Указатель на количество столбцов матрицы (возвращаемое значение).
 * @param A     Указатель на массив значений разреженной матрицы (возвращаемое значение).
 * @param JA    Указатель на массив индексов столбцов разреженной матрицы (возвращаемое значение).
 * @param IA    Указатель на массив индексов строк разреженной матрицы (возвращаемое значение).
 * @param len_i Указатель на количество элементов в массиве IA (возвращаемое значение).
 * @param ct    Указатель на количество ненулевых элементов в матрице (возвращаемое значение).
 * @return      Код ошибки или OK, если операция выполнена успешно.
 */
int input_matrix(int *n, int *m, int **A, int **JA, int **IA, int *len_i, int *ct);

/**
 * Читает полную матрицу из стандартного ввода и сохраняет ее в трех массивах.
 *
 * @param a  Указатель на массив значений стандартной матрицы (возвращаемое значение).
 * @param ia Указатель на массив индексов строк стандартной матрицы (возвращаемое значение).
 * @param ja Указатель на массив индексов столбцов стандартной матрицы (возвращаемое значение).
 * @param n  Указатель на количество строк матрицы (возвращаемое значение).
 * @param m  Указатель на количество столбцов матрицы (возвращаемое значение).
 * @return   Код ошибки или OK, если операция выполнена успешно.
 */
int full_matrix(int **a, int **ia, int **ja, int *n, int *m);

/**
 * Читает вектор из стандартного ввода и сохраняет его в массиве.
 *
 * @param vec Указатель на массив, в который будет сохранен вектор (возвращаемое значение).
 * @param n   Указатель на количество элементов в векторе (возвращаемое значение).
 * @return    Код ошибки или OK, если операция выполнена успешно.
 */
int input_vector(int **vec, int *n);


#endif
