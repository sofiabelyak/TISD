#ifndef _EFFICIENCY_H_
#include "arr.h"
#include "list.h"
#include "task.h"
#include "defines.h"
#include <math.h>
#include <stdio.h>
#include <sys/time.h>
#include <inttypes.h>
/**
 * @brief Создает массивную очередь, наполняет ее заявками до максимальной длины,
 *        затем освобождает память.
 * 
 * @details Функция создает массивную очередь, добавляет в нее заявки до максимальной
 *          длины (MAXLEN), освобождает память, выделяемую заявками, и затем освобождает
 *          память, выделенную для самой очереди.
 * 
 * @note Функция использует глобальную константу MAXLEN, представляющую максимальную
 *       длину очереди.
 */
void make_and_del_arr();

/**
 * @brief Создает списочную очередь, наполняет ее заявками до максимальной длины,
 *        затем освобождает память.
 * 
 * @details Функция создает списочную очередь, добавляет в нее заявки до максимальной
 *          длины (MAXLEN), освобождает память, выделяемую заявками, и затем освобождает
 *          память, выделенную для самой очереди.
 * 
 * @note Функция использует глобальную константу MAXLEN, представляющую максимальную
 *       длину очереди.
 */
void make_and_del_list();

/**
 * @brief Оценивает эффективность массивной и списочной реализаций очередей.
 * 
 * @details Функция проводит серию симуляций для массивной и списочной очередей,
 *          измеряет время выполнения операций и затраты памяти, выводит результаты
 *          в табличном формате.
 * 
 * @note Функция использует глобальную константу MAXLEN, представляющую максимальную
 *       длину очереди, и глобальные переменные для параметров симуляции.
 */
void efficiency();

#define _EFFICIENCY_H_
#endif